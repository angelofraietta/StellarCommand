plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '2.0.0'
}

// Test for right version of Java in use for running this script
assert org.gradle.api.JavaVersion.current().isJava8Compatible()

apply plugin: 'idea'

idea{
    module {
        downloadJavadoc = true // defaults to false
        downloadSources = true
    }
}

//don't add tutorial files to source set, they don't need to be in the final jar.
sourceSets {
    main {
        java {
            srcDirs( "src/main/java" )
        }
    }
}

group 'com.stellarcommand'
version ''

sourceCompatibility = 1.8

repositories {
    //All sub-projects will now refer to the same 'libs' directory
    flatDir {
        dirs "libs"
    }
    mavenCentral()
}

shadowJar{
    baseName = 'StellarCommand'
    classifier = ''
    manifest {
        attributes 'Main-Class': 'com.stellarcommand.Main'
    }
}

dependencies {
    //compile   fileTree(dir: "$rootProject.projectDir/libs", include: '*.jar')
    //compile     group: 'org.slf4j',             name: 'slf4j-api',          version: '1.7.7'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    compile     group: 'org.json',              name: 'json',               version: '20180130'
    compile     group: 'de.sciss',              name: 'netutil',            version: '1.0.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'

}

//create a jar of javadocs
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

jar {
    baseName = 'StellarCommand'
    manifest {
        attributes 'Main-Class': 'com.stellarcommand.Main'
    }
}


task deployJarAndJavaDoc << {
    copy {
        from 'build/docs/javadoc'
        into 'Distribution/Examples/libs/docs/StellarCommand/javadoc'
    }

    copy {
        from 'build/libs/StellarCommand.jar'
        into 'Distribution/Examples/Device/HappyBrackets/data/jars/'
    }

    copy {
        from 'build/docs/javadoc'
        into 'Distribution/Docs/'
    }

    copy {
        from 'build/libs/StellarCommand.jar'
        into 'Distribution/'
    }

    copy {
        from 'manual/src/StellarCommandManual.pdf'
        into 'Distribution/Docs/'
    }
    println "copied jars"
}


// Pack our Build Jar file and the version text into a zip file so we can add it to plugin resources
task packDistribution (type:Zip) {
    //destinationDir "." //set our output directory
    archiveName 'StellarCommand.zip'  //set the name of our archive

    //config
    from("Distribution") {
        include '*/**'
    }

}

packDistribution.dependsOn deployJarAndJavaDoc

deployJarAndJavaDoc.dependsOn(javadocJar)
deployJarAndJavaDoc.dependsOn shadowJar